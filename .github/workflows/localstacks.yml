name: Deploy infrastructure on LocalStack

on: 
  workflow_dispatch:

jobs:
  terraform:
    name: Deploy infrastucture using Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup.terraform@v3

      - name: Set up Python 3.10
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install Compose
        uses: ndeloof/install-compose-action@v0.0.1
        with:
          version: v2.1.0 # defaults to 'latest'
          legacy: true    # will also install in PATH as `docker-compose`
      - name: Start LocalStack
        uses: LocalStack/setup-localstack@v0.1.3
        with:
          image-tag: 'latest'
          install-awslocal: 'true'
          configuration: DEBUG=1
      - name: Deploy AWS resources with Terraform
        run: |
          cd Infraestructure/Terraform
          terraform init
          terraform plan
          terraform apply --auto-approve
          terraform output --json > out.json
      - name: Execute createtask
        run: |
          api_rest_api_id=$(cat Infraestructure/Terraform/out.json | jq -r '.api_rest_api_id.value')
          curl -X POST "http://localhost:4566/restapis/${api_rest_api_id}/prod/_user_request_/createtask" -H 'Content-Type: application/json' -d'
          {
            "task_name": "MyAwesomeTask",
            "cron_expression": "* * * * *"
          }'
      - name: Execute listtask
        run: |
          api_rest_api_id=$(cat Infraestructure/Terraform/out.json | jq -r '.api_rest_api_id.value')
          curl -X GET "http://localhost:4566/restapis/${api_rest_api_id}/prod/_user_request_/listtask"
      - name: Wait one minute
        uses: GuillaumeFalourd/wait-sleep-action@v1
        with:
          time: '1m' # for 1 minute
      - name: Check every-minute
        run: |
          awslocal s3 ls s3://taskstorage

          
